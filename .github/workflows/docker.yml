name: CI

on:
  push:
    branches:
      - main
      - develop
      - 'release/*'

    tags:
      - '*'

  pull_request:

env:
  MAIN_REPO: ncsa/standalone-smm-analytics

jobs:

  # ----------------------------------------------------------------------
  # DOCKER BUILD
  # ----------------------------------------------------------------------
  docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        name:
          - autophrase
          - histogram
          - check_screen_name
          - classification_predict
          - classification_train
          - classification_split
          - collect_reddit_comments
          - crimson_hexagon_monitors
          - image_crawler
          - named_entity_recognition
          - network_analysis
          - preprocessing
          - screen_name_prompt
          - sentiment_analysis
          - topic_modeling
        include:
          - name: autophrase
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/autophrase
            hub_project: socialmediamacroscope/autophrase
            github_project: ncsa/autophrase
          - name: histogram
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/histogram
            hub_project: socialmediamacroscope/histogram
            github_project: ncsa/histogram
          - name: check_screen_name
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/check_screen_name
            hub_project: socialmediamacroscope/check_screen_name
            github_project: ncsa/check_screen_name
          - name: classification_predict
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/classification_predict
            hub_project: socialmediamacroscope/classification_predict
            github_project: ncsa/classification_predict
          - name: classification_train
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/classification_train
            hub_project: socialmediamacroscope/classification_train
            github_project: ncsa/classification_train
          - name: classification_split
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/classification_split
            hub_project: socialmediamacroscope/classification_split
            github_project: ncsa/classification_split
          - name: collect_reddit_comments
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/collect_reddit_comments
            hub_project: socialmediamacroscope/collect_reddit_comments
            github_project: ncsa/collect_reddit_comments
          - name: crimson_hexagon_monitors
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/crimson_hexagon_monitors
            hub_project: socialmediamacroscope/crimson_hexagon_monitors
            github_project: ncsa/crimson_hexagon_monitors
          - name: image_crawler
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/image_crawler
            hub_project: socialmediamacroscope/image_crawler
            github_project: ncsa/image_crawler
          - name: named_entity_recognition
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/named_entity_recognition
            hub_project: socialmediamacroscope/named_entity_recognition
            github_project: ncsa/named_entity_recognition
          - name: network_analysis
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/network_analysis
            hub_project: socialmediamacroscope/network_analysis
            github_project: ncsa/network_analysis
          - name: preprocessing
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/preprocessing
            hub_project: socialmediamacroscope/preprocessing
            github_project: ncsa/preprocessing
          - name: screen_name_prompt
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/screen_name_prompt
            hub_project: socialmediamacroscope/screen_name_prompt
            github_project: ncsa/screen_name_prompt
          - name: sentiment_analysis
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/sentiment_analysis
            hub_project: socialmediamacroscope/sentiment_analysis
            github_project: ncsa/sentiment_analysis
          - name: topic_modeling
            dockerfile: Dockerfile
            workdir: containerized_analytics/smile/topic_modeling
            hub_project: socialmediamacroscope/topic_modeling
            github_project: ncsa/topic_modeling
    steps:
    # checkout source code
    - uses: actions/checkout@v2

    # calculate version information
    - name: version information
      run: |
        if [ "${{ github.event.release.target_commitish }}" != "" ]; then
          BRANCH="${{ github.event.release.target_commitish }}"
        elif [[ "${{github.event_name}}" == "pull_request" ]]; then
            BRANCH="PR-${{github.event.pull_request.number}}"
        else
          BRANCH=${GITHUB_REF##*/}
        fi
        echo "GITHUB_BRANCH=${BRANCH}" >> $GITHUB_ENV

        if [ "$BRANCH" == "main" ]; then
          VERSION=$(cat manual_jb/content/_config.yml | grep "version" | head -1 | awk -F= "{print $2 }" | sed "s/[[:alpha:]|,|-|\"|:|#|[:space:]]//g" | sed "s/-//g")
          VERSIONS="latest"
          OLDVERSION=""
          TMPVERSION=$VERSION
          while [ "$OLDVERSION" != "$TMPVERSION" ]; do
            VERSIONS="${VERSIONS} ${TMPVERSION}"
            OLDVERSION="${TMPVERSION}"
            TMPVERSION=$(echo ${OLDVERSION} | sed 's/\.[0-9]*$//')
          done
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAGS=${VERSIONS}" >> $GITHUB_ENV
        elif [ "$BRANCH" == "develop" ]; then
          echo "VERSION=develop" >> $GITHUB_ENV
          echo "TAGS=develop" >> $GITHUB_ENV
        else
          echo "VERSION=testing" >> $GITHUB_ENV
          echo "TAGS=${BRANCH}" >> $GITHUB_ENV
        fi

    - name: Print Version tag
      run: echo "${{ env.TAGS }}"

      # login to registries
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build docker image
      if: |
        github.repository == env.MAIN_REPO &&
        (github.event_name == env.GITHUB_BRANCH == 'main')
      uses: elgohr/Publish-Docker-Github-Action@3.04
      with:
        dockerfile: ${{ matrix.dockerfile }}
        name: ${{ matrix.hub_project }}
        no_push: true
        workdir: ${{ matrix.workdir }}

    - name: Publish doc image to Docker Hub
      if: |
        github.repository == env.MAIN_REPO &&
        (github.event_name == env.GITHUB_BRANCH == 'main')
#      if: github.repository == env.MAIN_REPO
      uses: elgohr/Publish-Docker-Github-Action@3.04
      with:
        registry: docker.io
        name: ${{ matrix.hub_project }}
        username: ${{ secrets.HUB_USERNAME }}
        password: ${{ secrets.HUB_PASSWORD }}
        tags: "${{ env.TAGS }}"
        workdir: ${{ matrix.workdir }}

    - name: Publish doc image to Github
#      if: |
#        github.repository == env.MAIN_REPO &&
#        (github.event_name == env.GITHUB_BRANCH == 'develop')
      if: github.repository == env.MAIN_REPO
      uses: elgohr/Publish-Docker-Github-Action@3.04
      with:
        registry: ghcr.io
        name: ${{ matrix.github_project }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        tags: "${{ env.TAGS }}"
        workdir: ${{ matrix.workdir }}
