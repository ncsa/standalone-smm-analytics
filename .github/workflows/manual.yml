name: Manual Docker Container Build

on:
  workflow_dispatch:
    inputs:
      push_to_where:
        description: 'Select the registry to push to'
        default: 'github'
        required: true
        type: choice
        options:
          - github
          - dockerhub
      specific_package:
        description: 'Select the specific package to build'
        default: 'sentiment_analysis'
        required: true
        type: choice
        options:
          - autophrase
          - histogram
          - check_screen_name
          - classification_predict
          - classification_train
          - classification_split
          - collect_reddit_comment
          - crimson_hexagon_monitors
          - image_crawler
          - name_entity_recognition
          - network_analysis
          - preprocessing
          - screen_name_prompt
          - sentiment_analysis
          - topic_modeling
          - clowder_create_collection
          - clowder_create_dataset
          - clowder_create_space
          - clowder_list
          - clowder_upload_file

env:
  MAIN_REPO: ncsa/standalone-smm-analytics

jobs:
  # ----------------------------------------------------------------------
  # DOCKER BUILD
  # ----------------------------------------------------------------------
  docker:
    runs-on: ubuntu-latest
    steps:
      # checkout source code
      - uses: actions/checkout@v2

      # calculate version information
      - name: version information
        run: |
          if [ "${{ github.event.release.target_commitish }}" != "" ]; then
            BRANCH="${{ github.event.release.target_commitish }}"
          elif [[ "${{github.event_name}}" == "pull_request" ]]; then
              BRANCH="PR-${{github.event.pull_request.number}}"
          else
            BRANCH=${GITHUB_REF##*/}
          fi
          echo "GITHUB_BRANCH=${BRANCH}" >> $GITHUB_ENV

          if [ "$BRANCH" == "main" ]; then
            CHANGELOG_FILE="containerized_analytics/smile/${{ inputs.specific_package }}/CHANGELOG.md"
            if [ -e "$CHANGELOG_FILE" ]; then
              VERSION=$(cat "$CHANGELOG_FILE" | grep -Eo '\[[0-9]+\.[0-9]+\.[0-9]+\]'| head -1 | tr -d '[]')
              VERSIONS="latest"
              OLDVERSION=""
              TMPVERSION=$VERSION
              while [ "$OLDVERSION" != "$TMPVERSION" ]; do
                VERSIONS="${VERSIONS} ${TMPVERSION}"
                OLDVERSION="${TMPVERSION}"
                TMPVERSION=$(echo ${OLDVERSION} | sed 's/\.[0-9]*$//')
              done
              echo "VERSION=$VERSION" >> $GITHUB_ENV
              echo "TAGS=${VERSIONS}" >> $GITHUB_ENV
            else
              echo "VERSION=latest" >> $GITHUB_ENV
              echo "TAGS=latest" >> $GITHUB_ENV          
            fi
          elif [ "$BRANCH" == "develop" ]; then
            echo "VERSION=develop" >> $GITHUB_ENV
            echo "TAGS=develop" >> $GITHUB_ENV
          else
            echo "VERSION=testing" >> $GITHUB_ENV
            echo "TAGS=${BRANCH}" >> $GITHUB_ENV
          fi
      - name: Print Version tag
        run: |
          echo "${{ env.TAGS }}"
          echo "${{ inputs.push_to_where }}"
          echo "HUBPUSH=${{ inputs.push_to_where }}" >> $GITHUB_ENV

        # login to registries
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker image
        if: |
          env.HUBPUSH == 'github' || env.HUBPUSH == 'dockerhub'
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          dockerfile: Dockerfile
          name: socialmediamacroscope/${{ inputs.specific_packages }}
          no_push: true
          workdir: containerized_analytics/smile/${{ inputs.specific_packages }}

      - name: Publish doc image to Docker Hub
        if: |
          env.HUBPUSH == 'dockerhub'
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          registry: docker.io
          name: socialmediamacroscope/${{ inputs.specific_packages }}
          username: ${{ secrets.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}
          tags: "${{ env.TAGS }}"
          workdir: containerized_analytics/smile/${{ inputs.specific_packages }}

      - name: Publish doc image to Github
        if: |
          env.HUBPUSH == 'github'
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          registry: ghcr.io
          name: ncsa/${{ inputs.specific_packages }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          tags: "${{ env.TAGS }}"
          workdir: containerized_analytics/smile/${{ inputs.specific_packages }}
